@startuml

class PaymentController {
    + pay(paymentInfo: PaymentInfo, paymentType: PaymentType) : Object
    + showAvailablePaymentTypes() : List<PaymentType>
}

class PaymentService {
    + pay(PaymentInfo, PaymentType) : Object
    + getPaymentTypes() : List<PaymentType>
}

enum PaymentType {
    PAYPAL
    INVOICE
}

interface PaymentFacade {
    + pay(PaymentInfo) : Object
}

class PaypalFacade {
    + pay(PaymentInfo) : String
}

class InvoiceFacade {
    + pay(PaymentInfo) : InvoiceInfo
}

class PaypalService {
    + pay(PaymentInfo) : String
    + createPayment(PaymentInfo) : String
    + getApprovalLink(String) : String
    + executePayment(String) : String
}

class InvoiceService {
    + pay(PaymentInfo) : InvoiceInfo
}

interface ExternalPaypalPaymentApi {
}

PaymentController -DOWN-> PaymentService : "Uses"
PaymentService --> PaymentType : "Uses"
PaymentService -DOWN-> PaypalFacade : "Sends requests to"
PaymentService -DOWN-> InvoiceFacade : "Sends requests to"
PaymentService -DOWN-> PaymentType : "PaymentType has facades"

PaymentType : +getFacade() : PaymentFacade
PaymentType -LEFT-> PaypalFacade : "Connects with"
PaymentType -RIGHT-> InvoiceFacade : "Connects with"

PaypalFacade ..|> PaymentFacade
InvoiceFacade ..|> PaymentFacade

PaypalFacade --> PaypalService : "Sends requests to"
InvoiceFacade --> InvoiceService : "Sends requests to"

PaypalService ..|> ExternalPaypalPaymentApi

@enduml
